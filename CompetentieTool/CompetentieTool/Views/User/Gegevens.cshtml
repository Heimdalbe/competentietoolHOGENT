@model CompetentieTool.Models.ViewModels.ProfielViewModel;
@{
    //ViewData["Title"] = ViewData["Naam"];


}

<div class="container centcontent">
    
    <div class="row">
        <div class="col-sm-10">
            <form method="post">
                <div asp-validation-summary="All" class="text-danger"></div>

                <h3 class="col-sm-12">Aanspreking</h3>
                <div class="form-group col-sm-12">
                    <div class="col-sm-6">
                        @Html.Label("Input.Voornaam", "Voornaam")
                        @Html.TextBoxFor(model => model.Voornaam, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-6">
                        @Html.Label("Input.Achternaam", "Achternaam")
                        @Html.TextBoxFor(model => model.Achternaam, new { @class = "form-control" })
                    </div>
                </div>
                <h3 class="col-sm-12">Persoonlijke gegevens</h3>
                <div class="form-group col-sm-12">
                    <div class="col-sm-6">
                        <div>
                            @Html.Label("Input.Geboortedatum", "Geboortedatum")
                        </div>
                        @Html.EditorFor(model => model.Geboortedatum, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-6">
                        @Html.Label("Input.Nationaliteit", "Nationaliteit")
                        @Html.TextBoxFor(model => model.Nationaliteit, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-sm-12">
                    <div class="col-sm-8">
                        @Html.LabelFor(model => model.Geslacht, new { @class = "control-label" })
                        <div>
                            Man:
                            @Html.RadioButtonFor(model => model.Geslacht, "M")
                            Vrouw:
                            @Html.RadioButtonFor(model => model.Geslacht, "V")
                            Andere:
                            @Html.RadioButtonFor(model => model.Geslacht, "X")
                        </div>

                    </div>
                </div>
                <div class="form-group col-sm-12">
                    <div class="col-sm-8">
                        @Html.Label("Input.Straat", "Straat")
                        @Html.TextBoxFor(model => model.Straat, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-4">
                        @Html.Label("Input.Huisnummer", "Huisnummer")
                        @Html.TextBoxFor(model => model.Huisnummer, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-sm-12">
                    <div class="col-sm-8">
                        @Html.Label("Input.Gemeente", "Gemeente")
                        @Html.TextBoxFor(model => model.Gemeente, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-4">
                        @Html.Label("Input.Postcode", "Postcode")
                        @Html.TextBoxFor(model => model.Postcode, new { @class = "form-control" })
                    </div>
                </div>
                @if (Model.IsSollicitant)
                {
                    <h3 class="col-sm-12">Opleiding</h3>
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6">
                            @Html.Label("Input.Opleidingsniveau", "Opleidingsniveau")
                            @Html.DropDownListFor(m => m.Opleidingsniveau, Enum.GetValues(typeof(Opleidingsniveau)).Cast<Opleidingsniveau>().Select(c => new SelectListItem { Text = c.ToString(), Value = c.ToString() }), "Opleidingsniveau", new { @class = "form-control" })
                        </div>
                        <div class="col-sm-6">
                            @Html.Label("Input.Opleiding", "Studie")
                            @Html.TextBoxFor(model => model.Opleiding, new { @class = "form-control" })
                        </div>
                    </div>
                }
                else
                {
                    <h3 class="col-sm-12">Organisatie</h3>
                    <div class="form-group col-sm-12">
                        <div class="col-sm-6">
                            @Html.Label("Input.OrganisatieNaam", "Organisatie")
                            @Html.TextBoxFor(model => model.OrganisatieNaam, new { @class = "form-control" })
                        </div>
                        <div class="col-sm-6">
                            @Html.Label("Input.Btwnummer")
                            @Html.TextBoxFor(model => model.Btwnummer, new { @class = "form-control" })
                        </div>
                    </div>
                }


                <h3 class="col-sm-12">Contact informatie</h3>
                <div class="form-group col-sm-12">
                    <div class="col-sm-6">
                        @Html.Label("Input.Email", "Email")
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-6">
                        @Html.Label("Input.GsmNummer", "Gsm")
                        @Html.TextBoxFor(model => model.Gsm, new { @class = "form-control" })
                    </div>
                </div>

                <button type="submit" class="btn btn-default">Opslaan</button>
            </form>
        </div>
    </div>
</div>
@section scripts {
    <script asp-src-include="lib/jquery-validation/dist/jquery.validate.js"></script>
    <script asp-src-include="lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
}